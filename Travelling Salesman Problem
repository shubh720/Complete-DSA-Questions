#include <bits/stdc++.h>
using namespace std;

int dist[100][100];
int visited_all,n;


int tsp(int mask,int pos){
    if(mask == visited_all)
        return dist[pos][0];
    
    int ans = INT_MAX;

    // iterate over all possible pos
    for(int city=0; city<n; city++){
        int temp_mask = (1 << city);
        if((mask&(temp_mask)) == 0){
            // dist from pos to city travelling
            int Newans = dist[pos][city] + tsp(mask|temp_mask,city);
            ans = min(Newans,ans);
        }
    }
  return ans;
}


int main(){

    cin >> n;

    for(int i=0; i<n; i++){
        for(int j=0; j<n; j++){
            cin >> dist[i][j];
        }
    }

    visited_all = (1<<n) - 1;

    // 1 --> ..0001 (..  represents n); 0 --> pos(n,n-1,....,2,1,0)
    cout << tsp(1,0) << endl;

    return 0;
}
