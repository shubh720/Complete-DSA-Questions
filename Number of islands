#include <bits/stdc++.h>
using namespace std;
#define ll long long
int hor[] = {1,-1,0,0};
int ver[] = {0,0,1,-1};

void dfs_helper(int i,int j,bool mat[][100],int n,int m){
    mat[i][j] = 0;

    for(int k=0; k<4; k++){
        int r = i + ver[k];
        int c = j + hor[k];

        if(r >=0 && c >= 0 && r < n && c < m && mat[r][c] == 1){
            dfs_helper(r,c,mat,n,m);
        }
    }
}

void dfs(int n,int m,bool mat[][100]){
    
    int cnt = 0;
    for(int i=0 ;i<n; i++){
        for(int j=0; j<m; j++){
            if(mat[i][j] == 1){
                dfs_helper(i,j,mat,n,m);
                cnt++;
            }
        }
    }
    cout << cnt << endl;
}

int main(){

    int n,m;
    cin >> n >> m;

    bool mat[100][100];
    // for(int i=0; i<n; i++){
    //     for(int j=0; j<m; j++){
    //         cin >> mat[i][j];
    //     }
    // }

    for(int i=0; i<n; i++){
        string s;
        cin >> s;

        for(int j=0; j<s.length(); j++)
            mat[i][j] = s[j] - '0';
    }
    
    dfs(n,m,mat);
    
    return 0;
}
